---
serviceAccount:
  enabled: false
  name: foundry-vtt

service:
  port: 4180
  serviceType: ClusterIP

podAnnotations:
  vault.hashicorp.com/agent-inject: "true"
  vault.hashicorp.com/role: "frost-wind-terror-foundry"
  vault.hashicorp.com/agent-inject-secret-oauth2-proxy.cfg: "foundry/data/frost-wind-terror/config"
  vault.hashicorp.com/agent-inject-template-oauth2-proxy.cfg: |
    {{- with secret "foundry/data/frost-wind-terror/config" -}}
    client_id = "{{ .Data.data.OAUTH2_PROXY_CLIENT_ID }}"
    client_secret = "{{ .Data.data.OAUTH2_PROXY_CLIENT_SECRET }}"
    cookie_secret = "{{ .Data.data.OAUTH2_PROXY_COOKIE_SECRET }}"
    http_address = "0.0.0.0:4180"
    upstreams = [ "file:///dev/null" ]
    email_domains = [ "*" ]
    provider = "oidc"
    reverse_proxy = true
    oidc_issuer_url = "https://keycloak.mackenzieclark.codes/auth/realms/frost-wind-terror"
    silence_ping_logging = "true"
    cookie_expire = "{{ .Data.data.OAUTH2_PROXY_COOKIE_EXPIRE }}"
    allowed_groups = ["player"]
    oidc_groups_claim = "realm_roles"
    scope = "openid email profile roles"
    {{- end -}}

resources:
  limits:
    cpu: 100m
    memory: 256Mi
  requests:
    cpu: 20m
    memory: 50Mi

ingress:
  enabled: true
  annotations:
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
    certmanager.k8s.io/acme-challenge-type: "dns01"
    certmanager.k8s.io/acme-dns01-provider: "digitalocean"
  path: '/oauth2'
  hosts:
    - "foundry.frost-wind-terror.group"
  tls:
    - hosts:
        - "foundry.frost-wind-terror.group"
      secretName: "foundry.frost-wind-terror.group-tls"

extraArgs:
  config: "/vault/secrets/oauth2-proxy.cfg"

config:
  existingConfig: null
  configFile: null

proxyVarsAsSecrets: false
