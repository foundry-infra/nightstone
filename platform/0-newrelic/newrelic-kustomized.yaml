apiVersion: v1
imagePullSecrets: []
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: newrelic-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-2.9.7
  name: newrelic-bundle-kube-state-metrics
  namespace: platform
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: newrelic-infrastructure
    chart: newrelic-infrastructure-2.3.1
    heritage: Helm
    release: newrelic-bundle
  name: newrelic-bundle-newrelic-infrastructure
  namespace: platform
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: newrelic-logging
    chart: newrelic-logging-1.4.6
    heritage: Helm
    release: newrelic-bundle
  name: newrelic-bundle-newrelic-logging
  namespace: platform
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: nri-kube-events
    app.kubernetes.io/instance: newrelic-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-kube-events
    app.kubernetes.io/version: 1.4.0
    helm.sh/chart: nri-kube-events-1.7.0
  name: newrelic-bundle-nri-kube-events
  namespace: platform
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: newrelic-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.3.2
    helm.sh/chart: nri-metadata-injection-1.3.5
  name: newrelic-bundle-nri-metadata-injection
  namespace: platform
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: newrelic-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-prometheus
    app.kubernetes.io/version: 2.4.0
    helm.sh/chart: nri-prometheus-1.6.2
  name: nri-prometheus
  namespace: platform
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: newrelic-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-2.9.7
  name: newrelic-bundle-kube-state-metrics
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  verbs:
  - list
  - watch
- apiGroups:
  - extensions
  - apps
  resources:
  - daemonsets
  verbs:
  - list
  - watch
- apiGroups:
  - extensions
  - apps
  resources:
  - deployments
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - list
  - watch
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - limitranges
  verbs:
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - list
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - watch
- apiGroups:
  - extensions
  - apps
  resources:
  - replicasets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - replicationcontrollers
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - resourcequotas
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments
  verbs:
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: newrelic-infrastructure
    chart: newrelic-infrastructure-2.3.1
    heritage: Helm
    mode: privileged
    release: newrelic-bundle
  name: newrelic-bundle-newrelic-infrastructure
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/metrics
  - nodes/stats
  - nodes/proxy
  - pods
  - services
  verbs:
  - get
  - list
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: newrelic-logging
    app.kubernetes.io/name: newrelic-logging
    chart: newrelic-logging-1.4.6
    heritage: Helm
    release: newrelic-bundle
  name: newrelic-bundle-newrelic-logging
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: nri-kube-events
    app.kubernetes.io/instance: newrelic-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-kube-events
    app.kubernetes.io/version: 1.4.0
    helm.sh/chart: nri-kube-events-1.7.0
  name: newrelic-bundle-nri-kube-events
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: newrelic-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.3.2
    helm.sh/chart: nri-metadata-injection-1.3.5
  name: newrelic-bundle-nri-metadata-injection
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - get
  - create
  - patch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - create
  - get
  - delete
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/legacy-unknown
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: newrelic-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-prometheus
    app.kubernetes.io/version: 2.4.0
    helm.sh/chart: nri-prometheus-1.6.2
  name: newrelic-bundle-nri-prometheus
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/metrics
  - nodes/stats
  - nodes/proxy
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: newrelic-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-2.9.7
  name: newrelic-bundle-kube-state-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: newrelic-bundle-kube-state-metrics
subjects:
- kind: ServiceAccount
  name: newrelic-bundle-kube-state-metrics
  namespace: platform
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: newrelic-infrastructure
    chart: newrelic-infrastructure-2.3.1
    heritage: Helm
    mode: privileged
    release: newrelic-bundle
  name: newrelic-bundle-newrelic-infrastructure
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: newrelic-bundle-newrelic-infrastructure
subjects:
- kind: ServiceAccount
  name: newrelic-bundle-newrelic-infrastructure
  namespace: platform
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: newrelic-logging
    app.kubernetes.io/name: newrelic-logging
    chart: newrelic-logging-1.4.6
    heritage: Helm
    release: newrelic-bundle
  name: newrelic-bundle-newrelic-logging
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: newrelic-bundle-newrelic-logging
subjects:
- kind: ServiceAccount
  name: newrelic-bundle-newrelic-logging
  namespace: platform
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: nri-kube-events
    app.kubernetes.io/instance: newrelic-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-kube-events
    app.kubernetes.io/version: 1.4.0
    helm.sh/chart: nri-kube-events-1.7.0
  name: newrelic-bundle-nri-kube-events
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: newrelic-bundle-nri-kube-events
subjects:
- kind: ServiceAccount
  name: newrelic-bundle-nri-kube-events
  namespace: platform
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: newrelic-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.3.2
    helm.sh/chart: nri-metadata-injection-1.3.5
  name: newrelic-bundle-nri-metadata-injection
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: newrelic-bundle-nri-metadata-injection
subjects:
- kind: ServiceAccount
  name: newrelic-bundle-nri-metadata-injection
  namespace: platform
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: newrelic-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-prometheus
    app.kubernetes.io/version: 2.4.0
    helm.sh/chart: nri-prometheus-1.6.2
  name: newrelic-bundle-nri-prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: newrelic-bundle-nri-prometheus
subjects:
- kind: ServiceAccount
  name: nri-prometheus
  namespace: platform
---
apiVersion: v1
data:
  filter-kubernetes.conf: |
    [FILTER]
        Name           record_modifier
        Match          *
        Record         cluster_name ${CLUSTER_NAME}

    [FILTER]
        Name           kubernetes
        Match          kube.*
        Kube_URL       https://kubernetes.default.svc:443
        K8S-Logging.Exclude ${K8S_LOGGING_EXCLUDE}
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Log_Level     ${LOG_LEVEL}
        Daemon        off
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020

    @INCLUDE input-kubernetes.conf
    @INCLUDE output-newrelic.conf
    @INCLUDE filter-kubernetes.conf
  input-kubernetes.conf: |
    [INPUT]
        Name              tail
        Tag               kube.*
        Path              ${PATH}
        Parser            ${LOG_PARSER}
        DB                /var/log/flb_kube.db
        Mem_Buf_Limit     7MB
        Skip_Long_Lines   On
        Refresh_Interval  10
  output-newrelic.conf: |
    [OUTPUT]
        Name  newrelic
        Match *
        licenseKey ${LICENSE_KEY}
        endpoint ${ENDPOINT}
  parsers.conf: |
    # Relevant parsers retrieved from: https://github.com/fluent/fluent-bit/blob/master/conf/parsers.conf
    [PARSER]
        Name         docker
        Format       json
        Time_Key     time
        Time_Format  %Y-%m-%dT%H:%M:%S.%L
        Time_Keep    On

    [PARSER]
        Name cri
        Format regex
        Regex ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<message>.*)$
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z
kind: ConfigMap
metadata:
  labels:
    app: newrelic-logging
    app.kubernetes.io/name: newrelic-logging
    chart: newrelic-logging-1.4.6
    heritage: Helm
    release: newrelic-bundle
  name: newrelic-bundle-newrelic-logging-fluent-bit-config
  namespace: platform
---
apiVersion: v1
data:
  config.yaml: |-
    sinks:
    - name: newRelicInfra
      config:
        agentEndpoint: http://localhost:8001/v1/data
        clusterName: nightstone
        agentHTTPTimeout: 30s
kind: ConfigMap
metadata:
  labels:
    app: nri-kube-events
    app.kubernetes.io/instance: newrelic-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-kube-events
    app.kubernetes.io/version: 1.4.0
    helm.sh/chart: nri-kube-events-1.7.0
  name: newrelic-bundle-nri-kube-events-config
  namespace: platform
---
apiVersion: v1
data:
  config.yaml: |
    cluster_name: nightstone
    audit: false
    insecure_skip_verify: false
    require_scrape_enabled_label_for_nodes: true
    scrape_enabled_label: prometheus.io/scrape
    verbose: false
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: newrelic-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-prometheus
    app.kubernetes.io/version: 2.4.0
    helm.sh/chart: nri-prometheus-1.6.2
  name: newrelic-bundle-nri-prometheus-config
  namespace: platform
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: newrelic-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-2.9.7
  name: newrelic-bundle-kube-state-metrics
  namespace: platform
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/instance: newrelic-bundle
    app.kubernetes.io/name: kube-state-metrics
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: newrelic-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.3.2
    helm.sh/chart: nri-metadata-injection-1.3.5
  name: newrelic-bundle-nri-metadata-injection
  namespace: platform
spec:
  ports:
  - port: 443
    targetPort: 8443
  selector:
    app.kubernetes.io/name: nri-metadata-injection
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: newrelic-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-2.9.7
  name: newrelic-bundle-kube-state-metrics
  namespace: platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-state-metrics
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: newrelic-bundle
        app.kubernetes.io/name: kube-state-metrics
    spec:
      containers:
      - args:
        - --collectors=certificatesigningrequests
        - --collectors=configmaps
        - --collectors=cronjobs
        - --collectors=daemonsets
        - --collectors=deployments
        - --collectors=endpoints
        - --collectors=horizontalpodautoscalers
        - --collectors=ingresses
        - --collectors=jobs
        - --collectors=limitranges
        - --collectors=mutatingwebhookconfigurations
        - --collectors=namespaces
        - --collectors=networkpolicies
        - --collectors=nodes
        - --collectors=persistentvolumeclaims
        - --collectors=persistentvolumes
        - --collectors=poddisruptionbudgets
        - --collectors=pods
        - --collectors=replicasets
        - --collectors=replicationcontrollers
        - --collectors=resourcequotas
        - --collectors=secrets
        - --collectors=services
        - --collectors=statefulsets
        - --collectors=storageclasses
        - --collectors=validatingwebhookconfigurations
        - --collectors=volumeattachments
        image: quay.io/coreos/kube-state-metrics:v1.9.7
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        name: kube-state-metrics
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
      hostNetwork: false
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsUser: 65534
      serviceAccountName: newrelic-bundle-kube-state-metrics
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nri-kube-events
    app.kubernetes.io/instance: newrelic-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-kube-events
    app.kubernetes.io/version: 1.4.0
    helm.sh/chart: nri-kube-events-1.7.0
  name: newrelic-bundle-nri-kube-events
  namespace: platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nri-kube-events
  template:
    metadata:
      labels:
        app: nri-kube-events
        app.kubernetes.io/instance: newrelic-bundle
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: nri-kube-events
        app.kubernetes.io/version: 1.4.0
        helm.sh/chart: nri-kube-events-1.7.0
    spec:
      containers:
      - args:
        - -config
        - /app/config/config.yaml
        - -loglevel
        - debug
        image: newrelic/nri-kube-events:1.4.0
        imagePullPolicy: IfNotPresent
        name: kube-events
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /app/config
          name: config-volume
      - env:
        - name: NRIA_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              key: newrelic-license-key
              name: newrelic-license-key
        image: newrelic/k8s-events-forwarder:1.15.2
        name: infra-agent
        ports:
        - containerPort: 8001
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /var/db/newrelic-infra/data
          name: tmpfs-data
        - mountPath: /var/db/newrelic-infra/user_data
          name: tmpfs-user-data
        - mountPath: /tmp
          name: tmpfs-tmp
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: newrelic-bundle-nri-kube-events
      volumes:
      - configMap:
          name: newrelic-bundle-nri-kube-events-config
        name: config-volume
      - emptyDir: {}
        name: tmpfs-data
      - emptyDir: {}
        name: tmpfs-user-data
      - emptyDir: {}
        name: tmpfs-tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: newrelic-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.3.2
    helm.sh/chart: nri-metadata-injection-1.3.5
  name: newrelic-bundle-nri-metadata-injection
  namespace: platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nri-metadata-injection
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: newrelic-bundle
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: nri-metadata-injection
        app.kubernetes.io/version: 1.3.2
        helm.sh/chart: nri-metadata-injection-1.3.5
    spec:
      containers:
      - env:
        - name: clusterName
          value: nightstone
        image: newrelic/k8s-metadata-injection:1.3.2
        imagePullPolicy: IfNotPresent
        name: nri-metadata-injection
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 1
          periodSeconds: 1
        resources:
          limits:
            memory: 80M
          requests:
            cpu: 100m
            memory: 30M
        volumeMounts:
        - mountPath: /etc/tls-key-cert-pair
          name: tls-key-cert-pair
      serviceAccountName: newrelic-bundle-nri-metadata-injection
      volumes:
      - name: tls-key-cert-pair
        secret:
          secretName: newrelic-bundle-nri-metadata-injection
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: newrelic-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-prometheus
    app.kubernetes.io/version: 2.4.0
    helm.sh/chart: nri-prometheus-1.6.2
  name: newrelic-bundle-nri-prometheus
  namespace: platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nri-prometheus
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: newrelic-bundle
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: nri-prometheus
        app.kubernetes.io/version: 2.4.0
        helm.sh/chart: nri-prometheus-1.6.2
    spec:
      containers:
      - args:
        - --configfile=/etc/nri-prometheus/config.yaml
        env:
        - name: LICENSE_KEY
          valueFrom:
            secretKeyRef:
              key: newrelic-license-key
              name: newrelic-license-key
        - name: BEARER_TOKEN_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: CA_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        image: newrelic/nri-prometheus:2.4.0
        name: nri-prometheus
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /etc/nri-prometheus/
          name: config-volume
      serviceAccountName: nri-prometheus
      volumes:
      - configMap:
          name: newrelic-bundle-nri-prometheus-config
        name: config-volume
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: newrelic-infrastructure
    chart: newrelic-infrastructure-2.3.1
    heritage: Helm
    mode: privileged
    release: newrelic-bundle
  name: newrelic-bundle-newrelic-infrastructure
  namespace: platform
spec:
  selector:
    matchLabels:
      app: newrelic-infrastructure
      release: newrelic-bundle
  template:
    metadata:
      labels:
        app: newrelic-infrastructure
        mode: privileged
        release: newrelic-bundle
    spec:
      containers:
      - env:
        - name: NRIA_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              key: newrelic-license-key
              name: newrelic-license-key
        - name: CLUSTER_NAME
          value: nightstone
        - name: NRK8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: NRIA_DISPLAY_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: NRIA_CUSTOM_ATTRIBUTES
          value: '{"clusterName":"$(CLUSTER_NAME)"}'
        - name: NRIA_PASSTHROUGH_ENVIRONMENT
          value: KUBERNETES_SERVICE_HOST,KUBERNETES_SERVICE_PORT,CLUSTER_NAME,CADVISOR_PORT,NRK8S_NODE_NAME,KUBE_STATE_METRICS_URL,KUBE_STATE_METRICS_POD_LABEL,TIMEOUT,ETCD_TLS_SECRET_NAME,ETCD_TLS_SECRET_NAMESPACE,API_SERVER_SECURE_PORT,KUBE_STATE_METRICS_SCHEME,KUBE_STATE_METRICS_PORT,SCHEDULER_ENDPOINT_URL,ETCD_ENDPOINT_URL,CONTROLLER_MANAGER_ENDPOINT_URL,API_SERVER_ENDPOINT_URL,DISABLE_KUBE_STATE_METRICS,DISCOVERY_CACHE_TTL
        image: newrelic/infrastructure-k8s:2.3.0
        imagePullPolicy: IfNotPresent
        name: newrelic-infrastructure
        resources:
          limits:
            memory: 300M
          requests:
            cpu: 100m
            memory: 150M
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /dev
          name: dev
        - mountPath: /var/run/docker.sock
          name: host-docker-socket
        - mountPath: /var/log
          name: log
        - mountPath: /host
          name: host-volume
          readOnly: true
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      serviceAccountName: newrelic-bundle-newrelic-infrastructure
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      volumes:
      - hostPath:
          path: /dev
        name: dev
      - hostPath:
          path: /var/run/docker.sock
        name: host-docker-socket
      - hostPath:
          path: /var/log
        name: log
      - hostPath:
          path: /
        name: host-volume
  updateStrategy:
    type: RollingUpdate
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: newrelic-logging
    app.kubernetes.io/name: newrelic-logging
    chart: newrelic-logging-1.4.6
    heritage: Helm
    release: newrelic-bundle
  name: newrelic-bundle-newrelic-logging
  namespace: platform
spec:
  selector:
    matchLabels:
      app: newrelic-logging
      release: newrelic-bundle
  template:
    metadata:
      labels:
        app: newrelic-logging
        app.kubernetes.io/name: newrelic-logging
        release: newrelic-bundle
    spec:
      containers:
      - command:
        - /fluent-bit/bin/fluent-bit
        - -c
        - /fluent-bit/etc/fluent-bit.conf
        - -e
        - /fluent-bit/bin/out_newrelic.so
        env:
        - name: ENDPOINT
          value: https://log-api.newrelic.com/log/v1
        - name: SOURCE
          value: kubernetes
        - name: LICENSE_KEY
          valueFrom:
            secretKeyRef:
              key: newrelic-license-key
              name: newrelic-license-key
        - name: CLUSTER_NAME
          value: nightstone
        - name: LOG_LEVEL
          value: info
        - name: LOG_PARSER
          value: docker
        - name: PATH
          value: /var/log/containers/*.log
        - name: K8S_LOGGING_EXCLUDE
          value: "Off"
        image: newrelic/newrelic-fluentbit-output:1.4.6
        imagePullPolicy: IfNotPresent
        name: newrelic-logging
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 64Mi
        volumeMounts:
        - mountPath: /fluent-bit/etc
          name: fluent-bit-config
        - mountPath: /var
          name: var
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      serviceAccountName: newrelic-bundle-newrelic-logging
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      volumes:
      - configMap:
          name: newrelic-bundle-newrelic-logging-fluent-bit-config
        name: fluent-bit-config
      - hostPath:
          path: /var
        name: var
  updateStrategy:
    type: RollingUpdate
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm-timestamp: 2021-04-01 23:22:20.36511 -0700 PDT m=+0.161190301
  labels:
    app.kubernetes.io/instance: newrelic-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.3.2
    helm.sh/chart: nri-metadata-injection-1.3.5
  name: newrelic-bundle-nri-metadata-injection-job
  namespace: platform
spec:
  backoffLimit: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: newrelic-bundle
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: nri-metadata-injection
        app.kubernetes.io/version: 1.3.2
        helm.sh/chart: nri-metadata-injection-1.3.5
    spec:
      containers:
      - args:
        - --service
        - newrelic-bundle-nri-metadata-injection
        - --webhook
        - newrelic-bundle-nri-metadata-injection
        - --secret
        - newrelic-bundle-nri-metadata-injection
        - --namespace
        - platform
        command:
        - ./generate_certificate.sh
        image: newrelic/k8s-webhook-cert-manager:1.3.2
        imagePullPolicy: IfNotPresent
        name: nri-metadata-injection-job
      restartPolicy: Never
      serviceAccountName: newrelic-bundle-nri-metadata-injection
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: newrelic-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.3.2
    helm.sh/chart: nri-metadata-injection-1.3.5
  name: newrelic-bundle-nri-metadata-injection
webhooks:
- clientConfig:
    caBundle: ""
    service:
      name: newrelic-bundle-nri-metadata-injection
      namespace: platform
      path: /mutate
  failurePolicy: Ignore
  name: metadata-injection.newrelic.com
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  timeoutSeconds: 30
